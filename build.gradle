group "com.github.adamyork"
version "2.3"

apply plugin: "java"
apply plugin: "maven-publish"
apply plugin: "signing"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

task fatJar(type: Jar) {
    archiveName = "wiremock-velocity-transformer-standalone-" + fatJar.version + ".jar"
    manifest {
        attributes "Implementation-Title": "wiremock-velocity-transformer-standalone",
                "Implementation-Version": version
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task cleanFunctional(type: Delete) {
    delete fileTree(dir: "functional", include: "*-velocity-transformer-*.jar")
}

task copyFunctional(type: Copy) {
    from "build/libs/"
    include "*.jar"
    exclude "*-sources.jar", "*-javadoc.jar"
    into "functional/"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = "javadoc"
    from "build/docs/javadoc"
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = "sources"
}

jar {
    dependsOn fatJar
    dependsOn cleanFunctional
    dependsOn copyFunctional
    cleanFunctional.shouldRunAfter fatJar
    copyFunctional.dependsOn cleanFunctional
    copyFunctional.shouldRunAfter jar
    archiveName = "wiremock-velocity-transformer-" + jar.version + ".jar"
    manifest {
        attributes "Implementation-Title": "wiremock-velocity-transformer",
                "Implementation-Version": version
    }
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

dependencies {
    compile group: "org.apache.velocity", name: "velocity-engine-core", version: "2.1"
    compile group: "org.apache.velocity.tools", name: "velocity-tools-generic", version: "3.0"
    compile group: "com.github.tomakehurst", name: "wiremock-jre8", version: "2.23.2"
    compile group: "org.eclipse.jetty", name: "jetty-server", version: "9.2.22.v20170606"
    compile group: "org.eclipse.jetty", name: "jetty-servlet", version: "9.2.22.v20170606"
    compile group: "org.eclipse.jetty", name: "jetty-servlets", version: "9.2.22.v20170606"
    compile group: "org.eclipse.jetty", name: "jetty-webapp", version: "9.2.22.v20170606"
    compile group: "com.google.guava", name: "guava", version: "20.0"
    compile group: "com.fasterxml.jackson.core", name: "jackson-core", version: "2.8.9"
    compile group: "com.fasterxml.jackson.core", name: "jackson-annotations", version: "2.8.9"
    compile group: "com.fasterxml.jackson.core", name: "jackson-databind", version: "2.8.9"
    compile group: "org.apache.httpcomponents", name: "httpclient", version: "4.5.3"
    compile group: "org.xmlunit", name: "xmlunit-core", version: "2.3.0"
    compile group: "org.xmlunit", name: "xmlunit-legacy", version: "2.3.0"
    compile group: "com.jayway.jsonpath", name: "json-path", version: "2.4.0"
    compile group: "org.slf4j", name: "slf4j-api", version: "1.7.12"
    compile group: "net.sf.jopt-simple", name: "jopt-simple", version: "5.0.3"
    compile group: "org.apache.commons", name: "commons-lang3", version: "3.3.6"
    compile group: "com.flipkart.zjsonpatch", name: "zjsonpatch", version: "0.3.0"
    compile group: "org.jooq", name: "jool", version: "0.9.12"
    compile("junit:junit:4.12") {
        exclude group: "org.hamcrest", module: "hamcrest-core"
    }
    compile("com.github.jknack:handlebars:4.0.6") {
        exclude group: 'org.mozilla', module: 'rhino'
    }
    testCompile group: "org.hamcrest", name: "hamcrest-all", version: "1.3"
    testCompile group: "org.skyscreamer", name: "jsonassert", version: "1.2.3"
    testCompile group: "com.toomuchcoding.jsonassert", name: "jsonassert", version: "0.4.7"
    testCompile group: "org.awaitility", name: "awaitility", version: "2.0.0"
    testCompile group: "org.scala-lang", name: "scala-library", version: "2.11.12"
    testCompile group: "org.littleshoot", name: "littleproxy", version: "1.1.2"
    testCompile group: "org.apache.httpcomponents", name: "httpmime", version: "4.5"
    testCompile group: "com.googlecode.jarjar", name: "jarjar", version: "1.3"
    testCompile group: "commons-io", name: "commons-io", version: "2.4"
    testCompile group: "org.apache.velocity", name: "velocity-engine-core", version: "2.1"
    testRuntime group: "org.apache.velocity.tools", name: "velocity-tools-generic", version: "3.0"
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.1.0'
    testCompile("org.jmock:jmock:2.5.1") {
        exclude group: "junit", module: "junit-dep"
        exclude group: "org.hamcrest", module: "hamcrest-core"
        exclude group: "org.hamcrest", module: "hamcrest-library"
    }
    testCompile("org.jmock:jmock-junit4:2.5.1") {
        exclude group: "junit", module: "junit-dep"
        exclude group: "org.hamcrest", module: "hamcrest-core"
        exclude group: "org.hamcrest", module: "hamcrest-library"
    }
    testRuntime "org.slf4j:slf4j-log4j12:1.7.12"
}

signing {
    sign configurations.archives
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            customizePom(pom)
            groupId = "com.github.adamyork"
            artifactId = "wiremock-velocity-transformer"
            version "2.0"

            from components.java

            pom.withXml {
                def pomFile = file("${project.buildDir}/generated-pom.xml")
                writeTo(pomFile)
                def pomAscFile = signing.sign(pomFile).signatureFiles[0]
                artifact(pomAscFile) {
                    classifier = null
                    extension = "pom.asc"
                }
            }

            artifact(sourcesJar) {
                classifier = "sources"
            }
            artifact(javadocJar) {
                classifier = "javadoc"
            }

            project.tasks.signArchives.signatureFiles.each {
                artifact(it) {
                    def matcher = it.file =~ /-(sources|javadoc)\.jar\.asc$/
                    if (matcher.find()) {
                        classifier = matcher.group(1)
                    } else {
                        classifier = null
                    }
                    extension = "jar.asc"
                }
            }
        }
    }
    repositories {
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username sonatypeUsername
                password sonatypePassword
            }
        }
    }
}

def customizePom(pom) {
    pom.withXml {
        def root = asNode()

        root.dependencies.removeAll { dep ->
            dep.scope == "test"
        }

        root.children().last() + {
            resolveStrategy = DELEGATE_FIRST
            name "wiremock-velocity-transformer"
            description "transformer used to render velocity templates for stubbed responses"
            url "https://github.com/adamyork/wiremock-velocity-transformer"
            organization {
                name "com.github.adamyork"
                url "https://github.com/adamyork"
            }
            issueManagement {
                system "GitHub"
                url "https://github.com/adamyork/wiremock-velocity-transformer/issues"
            }
            licenses {
                license {
                    name "MIT"
                    url "https://github.com/adamyork/wiremock-velocity-transformer/blob/master/LICENSE"
                    distribution "repo"
                }
            }
            scm {
                url "scm:git@github.com:adamyork/wiremock-velocity-transformer.git"
                connection "scm:git@github.com:adamyork/wiremock-velocity-transformer.git"
                developerConnection "scm:git@github.com:adamyork/wiremock-velocity-transformer.git"
            }
            developers {
                developer {
                    id "adamcyork"
                    name "Adam York"
                }
            }
        }
    }
}

model {
    tasks.generatePomFileForMavenJavaPublication {
        destination = file("$buildDir/generated-pom.xml")
    }
    tasks.publishMavenJavaPublicationToMavenLocal {
        dependsOn project.tasks.signArchives
    }
    tasks.publishMavenJavaPublicationToMavenRepository {
        dependsOn project.tasks.signArchives
    }
}